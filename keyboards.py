# -*- coding: utf-8 -*-
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from datetime import datetime
from config import USERS

def registration_kb() -> InlineKeyboardMarkup:
    buttons = [
        [InlineKeyboardButton(text=f"–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∫–∞–∫ {title}", callback_data=f"register:{key}")]
        for key, title in USERS.items()
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def main_menu_kb() -> ReplyKeyboardMarkup:
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="‚ûï –í–Ω–µ—Å—Ç–∏ –≤–µ—Å")],
            [KeyboardButton(text="üìà –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã")],
            [KeyboardButton(text="‚úèÔ∏è –ò—Å–ø—Ä–∞–≤–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏")],
            [KeyboardButton(text="üçΩ –ß—Ç–æ –º–Ω–µ –ø–æ–µ—Å—Ç—å —Å–µ–≥–æ–¥–Ω—è?")]# NEW
        ],
        resize_keyboard=True,
        input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ‚Ä¶",
    )


def edit_choose_kb(entries: list) -> InlineKeyboardMarkup:
    rows = []
    for idx, rec in entries:
        # —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É –≤ –î–î.–ú–ú.–ì–ì–ì–ì
        dt_str = datetime.fromisoformat(rec["date"]).strftime("%d.%m.%Y")
        text = f"{dt_str} ‚Äî {rec['weight']} –∫–≥"
        rows.append([InlineKeyboardButton(text=text, callback_data=f"editpick:{idx}")])
    return InlineKeyboardMarkup(inline_keyboard=rows)


